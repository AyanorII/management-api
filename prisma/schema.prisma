// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  price         Float
  cost          Float
  slug          String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  category      Category        @relation(fields: [categoryId], references: [id])
  categoryId    Int
  vendorProduct VendorProduct[]
}

model VendorProduct {
  id        Int      @id @default(autoincrement())
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vendor    Vendor   @relation(fields: [vendorId], references: [id])
  vendorId  Int
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Vendor {
  id            Int             @id @default(autoincrement())
  name          String
  phone         String?
  email         String?
  contact       String?
  website       String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  vendorProduct VendorProduct[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

model Employee {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  phone     String
  gender    Gender   @default(FEMALE)
  startedAt DateTime
  active    Boolean  @default(true)
  salary    Float
  photo     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
